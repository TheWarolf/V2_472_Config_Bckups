# magprobe setup custom macro


#########################################################
[gcode_macro Homing_Variables]

# positione del dock effettivo
variable_dx:                250
variable_dy:                298#280
variable_dz:                8
# posizione di entrata
variable_dxe:          250
variable_dye:          268#250
variable_dze: 15
# posizione di entrata per dock
variable_dxed:          250
variable_dyed:          285#267
variable_dzed:          3
# posizione di uscita
variable_dxu: 250
variable_dyu: 303
variable_dzu: 30

variable_error: 0

variable_travel_speed:          300 # how fast all other travel moves will be performed when running these macros
variable_dock_speed:            30  # how fast the toolhead will move when docking the probe, and undocking

variable_is_docked: 1
variable_is_attached: 0

gcode:

# macro per controllare lo status
[gcode_macro PROBE_UPDATE_STATUS]
gcode:
    #QUERY_ENDSTOPS
    QUERY_PROBE
    UPDATE_PROBE_VARIABLES
    #STAMPA_STATUS

[gcode_macro UPDATE_PROBE_VARIABLES]
gcode:
    {% if printer.probe.last_query %} #true non e attaccata
        SET_GCODE_VARIABLE MACRO=Homing_Variables VARIABLE=is_attached VALUE=0
    {% else %}
        SET_GCODE_VARIABLE MACRO=Homing_Variables VARIABLE=is_attached VALUE=1
    {% endif %}
    
    {% if printer["filament_switch_sensor dock_check"].filament_detected %} #true e docked
        SET_GCODE_VARIABLE MACRO=Homing_Variables VARIABLE=is_docked VALUE=1
    {% else %}
        SET_GCODE_VARIABLE MACRO=Homing_Variables VARIABLE=is_docked VALUE=0
    {% endif %}
    
[gcode_macro STAMPA_STATUS]   
gcode:
    {action_respond_info("docked?")}
    {action_respond_info(printer["gcode_macro Homing_Variables"].is_docked|string)}
    {action_respond_info("attahced?")}
    {action_respond_info(printer["gcode_macro Homing_Variables"].is_attached|string)}
    
[gcode_macro ATTACCA_PROBE]
gcode:
    {% set Dx = printer["gcode_macro Homing_Variables"].dx|float %}
    {% set Dy = printer["gcode_macro Homing_Variables"].dy|float %}
    {% set Dz = printer["gcode_macro Homing_Variables"].dz|float %}
    
    {% set Dxe = printer["gcode_macro Homing_Variables"].dxe|float %}
    {% set Dye = printer["gcode_macro Homing_Variables"].dye|float %}
    {% set Dze = printer["gcode_macro Homing_Variables"].dze|float %}
    
    {% set Dspeed = printer["gcode_macro Homing_Variables"].dock_speed * 60 %}
    {% set Tspeed = printer["gcode_macro Homing_Variables"].travel_speed * 60 %}
    
    {% if printer["gcode_macro Homing_Variables"].error|int == 0 %}
        
        #G28
        #parcheggio in zona entry
        G1 X{Dxe} Y{Dye} Z{Dze} F{Tspeed}
        #avvicino al dock
        G1 X{Dx} Y{Dy} Z{Dz} F{Dspeed}
        
        #controllo e abbasso in caso
        PROBE_UPDATE_STATUS
        ABBASSA_PIANO
        PROBE_UPDATE_STATUS
        ABBASSA_PIANO
        PROBE_UPDATE_STATUS
        ABBASSA_PIANO
        PROBE_UPDATE_STATUS
        ABBASSA_PIANO
        PROBE_UPDATE_STATUS
        ABBASSA_PIANO
        PROBE_UPDATE_STATUS
        ABBASSA_PIANO
        PROBE_UPDATE_STATUS
        ABBASSA_PIANO
        PROBE_UPDATE_STATUS
        ABBASSA_PIANO
        PROBE_UPDATE_STATUS
        ABBASSA_PIANO_EXIT
        ESTRAI_PROBE
    
    {% endif %}
    
    
[gcode_macro ABBASSA_PIANO]   
gcode:
    {% if printer["gcode_macro Homing_Variables"].is_attached|int == 0 %}
        {action_respond_info("abbasso")}
        G91
        G1 Z-1 F300
        G90
    {% endif %}
    
[gcode_macro ABBASSA_PIANO_EXIT]   
gcode:
    {% if printer["gcode_macro Homing_Variables"].is_attached|int == 0 %}
        {action_respond_info("Failed to attach probe")}
        pause
    {% endif %}
    
[gcode_macro ESTRAI_PROBE]
gcode:
    {% set Dspeed = printer["gcode_macro Homing_Variables"].dock_speed * 60 %}
    {% set Tspeed = printer["gcode_macro Homing_Variables"].travel_speed * 60 %}
    G91 #relative
    G1 Y-15 F{Dspeed}
    G1 Z30 F{Dspeed}
    G90

[gcode_macro DOCK_PROBE]
gcode:
    {% set Dx = printer["gcode_macro Homing_Variables"].dx|float %}
    {% set Dy = printer["gcode_macro Homing_Variables"].dy|float %}
    {% set Dz = printer["gcode_macro Homing_Variables"].dz|float %}
    
    {% set Dxu = printer["gcode_macro Homing_Variables"].dxu|float %}
    {% set Dyu = printer["gcode_macro Homing_Variables"].dyu|float %}
    {% set Dzu = printer["gcode_macro Homing_Variables"].dzu|float %}
    
    {% set Dze = printer["gcode_macro Homing_Variables"].dze|float %}
    
    {% set Dxed = printer["gcode_macro Homing_Variables"].dxed|float %}
    {% set Dyed = printer["gcode_macro Homing_Variables"].dyed|float %}
    {% set Dzed = printer["gcode_macro Homing_Variables"].dzed|float %}
    
    {% set Dspeed = printer["gcode_macro Homing_Variables"].dock_speed * 60 %}
    {% set Tspeed = printer["gcode_macro Homing_Variables"].travel_speed * 60 %}
    
    {% if printer["gcode_macro Homing_Variables"].error|int == 0 %}
    
        #G28
        G1 X{Dxed} Y{Dyed} Z{Dze} F{Tspeed} #sopra al dock
        G1 Z{Dzed} F{Dspeed} #scendo al livello del dock
        G1 X{Dx} Y{Dy} F{Dspeed} #parcehggio al dock
        G1 X{Dxu} Y{Dyu} Z{Dzu} F{Dspeed}
        PROBE_UPDATE_STATUS
        
    {% endif %}
    
    
[gcode_macro CHECK_DOCK_STOP]
gcode:

    {% if printer["gcode_macro Homing_Variables"].is_docked|int == 0 %}
        {action_respond_info("Failed to dock probe")}
        M112
    {% endif %}

# [gcode_macro CHECK_DOCK]
# gcode:

    # {% if printer["gcode_macro Homing_Variables"].is_docked|int == 0 %}
        # {action_respond_info("Failed to dock probe")}
        # DOCK_PROBE
    # {% endif %}
  

[gcode_macro ATTACCA_PROBE_CHECK]
gcode:
    {% if (printer["gcode_macro Homing_Variables"].is_docked|int == 0 and printer["gcode_macro Homing_Variables"].is_attached|int == 0)%}
    # la sonda non e nel dock e non e attaccata - ERRORE
        {action_respond_info("The probe is nowhere to be seen. Please check")}
        SET_GCODE_VARIABLE MACRO=Homing_Variables VARIABLE=error VALUE=1
        M112
    {% elif (printer["gcode_macro Homing_Variables"].is_docked|int == 1 and printer["gcode_macro Homing_Variables"].is_attached|int == 0)%}
    # la sonda e nel dock e non e attaccata - ATTACCALA 
        ATTACCA_PROBE
    {% elif (printer["gcode_macro Homing_Variables"].is_docked|int == 1 and printer["gcode_macro Homing_Variables"].is_attached|int == 1)%}
    # la sonda e nel dock e attaccata - WIRING EROR
    {action_respond_info("Wiring Error")}
        M112
    {% endif %}
    #{% elif (printer["gcode_macro Homing_Variables"].is_docked|int == 0 and printer["gcode_macro Homing_Variables"].is_attached|int == 1%}
    # la sonda non e nel dock e e attaccata - PROCEDI SENZA FAR NIENTE

[gcode_macro DOCK_PROBE_CHECK]
gcode:
    {% if (printer["gcode_macro Homing_Variables"].is_docked|int == 0 and printer["gcode_macro Homing_Variables"].is_attached|int == 1)%}
    # la sonda non e nel dock e e attaccata - STACCALA
        DOCK_PROBE
    #{% elif (printer["gcode_macro Homing_Variables"].is_docked|int == 1 and printer["gcode_macro Homing_Variables"].is_attached|int == 1)%}
    # la sonda e nel dock e non e attaccata - ATTACCALA 
        #{action_respond_info("There's an error in wiring! Check")}
        #SET_GCODE_VARIABLE MACRO=Homing_Variables VARIABLE=error VALUE=1
        #M112
    {% elif (printer["gcode_macro Homing_Variables"].is_docked|int == 0 and printer["gcode_macro Homing_Variables"].is_attached|int == 0)%}
    # la sonda non e nel dock e non e attaccata - ERRORE
        {action_respond_info("The probe is nowhere to be seen. Please check")}
        #SET_GCODE_VARIABLE MACRO=Homing_Variables VARIABLE=error VALUE=1
        #M112
        pause
    {% endif %}
    #{% elif (printer["gcode_macro Homing_Variables"].is_docked|int == 1 and printer["gcode_macro Homing_Variables"].is_attached|int == 0%}
    # la sonda e nel dock e non e attaccata - OK NON FAR NIENTE

[gcode_macro ATTACCA_PROBE_MASTER]
# e la macro da chiamare quando effettivamente vuoi la sonda attaccata
gcode:
    G28
    PROBE_UPDATE_STATUS
    ATTACCA_PROBE_CHECK
    PROBE_UPDATE_STATUS
    ATTACCA_PROBE_CHECK
    PROBE_UPDATE_STATUS
    ATTACCA_PROBE_CHECK
    
[gcode_macro DOCK_PROBE_MASTER]
# e la macro da chiamare quando effettivamente vuoi la sonda staccata
gcode:
    #CG28
    PROBE_UPDATE_STATUS
    DOCK_PROBE_CHECK
    PROBE_UPDATE_STATUS
    DOCK_PROBE_CHECK
    PROBE_UPDATE_STATUS
    DOCK_PROBE_CHECK
    PROBE_UPDATE_STATUS
    CHECK_DOCK_STOP

  
[gcode_macro QUAD_GANTRY_LEVEL]
default_parameter_DETACH:1
rename_existing:             _QUAD_GANTRY_LEVEL
gcode:
   ATTACCA_PROBE_MASTER

   G1 X150 Y150 Z30 F10000
   G4 P30000
   M400
   _QUAD_GANTRY_LEVEL {% for p in params 
           %}{'%s=%s' % (p, params[p])}{% 
          endfor %}
    G28     
    {%if DETACH|int == 1 %}
        DOCK_PROBE_MASTER
        {action_respond_info("Attacco")}
    {% endif %}
   
    
[gcode_macro BED_MESH_CALIBRATE]
#default_parameter_DETACH:1
rename_existing:             _BED_MESH_CALIBRATE
gcode:

    {% set detach = params.DETACH|default(1)|int  %} 
    
    ATTACCA_PROBE_MASTER
    _BED_MESH_CALIBRATE {% for p in params 
           %}{'%s=%s' % (p, params[p])}{% 
          endfor %}
    {%if DETACH|int == 1 %}
        DOCK_PROBE_MASTER
        {action_respond_info("Attacco")}
    {% endif %}

